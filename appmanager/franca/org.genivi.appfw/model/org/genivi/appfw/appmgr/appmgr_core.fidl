package org.genivi.appfw

<**
	@description : This interface is exposed by app manager to privileged apps 
**>
interface AppManager_Core
{
	<**
		@description : a function to enumerate all apps in the system. It returns an array of app IDs which are reverse DNS style names 
		stored by app manager during app installation 
	**>
	method GetInstalledApps
	{
		out
		{
			String[] app_ids
		}
	}
	
	<**
		@description : This method provides the information of the app from manifest data encapsulated in the AppInfo struct
		app_id is a reverse DNS style name of the app which should be a part of manifest information 
	**>
	method GetAppInfo
	{
		in
		{
			String app_id
		}
		out
		{
			AppInfo info
		}
	}

	<**
		@description : launch an app using the app_id. App manager resolves the app_id to an entry point and launches it.
	**>
	method LaunchApp
	{
		in
		{
			String app_id
		}
	}
	
	<**
		@description : This should signal the addition or deletion of new apps, change in capability of apps to handle mimes etc. It si adviced to call GetAppMimeTable and GetInstalledApps as needed when this broadcast is received.  
	**>
	broadcast AppsInfoUpdated {}	

	<**
		@description : AppInfo is a map of manifest data. It stores Key and value as strings .The manifest should be a part of app bundle and app manager extracts and stores this data
	**>
	struct AppInfo
	{
		String app_id
		KeyValue values
	}

	map KeyValue
	{
		String to String
	}
}
