package org.genivi.appfw

<**
	@description : App manager interfaces to privileged apps.
	This interface exposes information about the installed and running applications. It shall typically be exposed by App Manager only to priviledged apps/processes that would need such information.
	An example is a Launcher process which would need information provided by this interface
**>
interface AppManager_Core
{
	<**
		@description : This method returns an array of app IDs which are reverse DNS style names stored by app manager during app installation
	**>
	method GetInstalledApps
	{
		out
		{
			String[] app_ids
		}
	}
	
	<**
		@description : This method provides the information of the app from manifest data encapsulated in the AppInfo struct.
		app_id is a reverse DNS style name of the app which should be a part of manifest information.
	**>
	method GetAppInfo
	{
		in
		{
			String app_id
		}
		out
		{
			AppInfo info
		}
	}

	<**
		@description : This method launchs an app using the app_id. App manager resolves the app_id to an entry point and launches it.
	**>
	method LaunchApp
	{
		in
		{
			String app_id
		}
	}
	
	<**
		@description : This broadcast is emitted whenever there is addition or deletion of apps, change in capability of apps to handle mimes or similar changes.
		It is recommended to call GetInstalledApps and GetAppInfo (on interested apps) as needed when this broadcast is received.
	**>
	broadcast AppsInfoUpdated {}

	<**
		@description : This is a structure for providing manifest details of an app as a Key-value map.
		The manifest should be a part of app bundle and app manager extracts and stores this data
	**>
	struct AppInfo
	{
		String app_id
		KeyValue values
	}

	map KeyValue
	{
		String to String
	}
}
