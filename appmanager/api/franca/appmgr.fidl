package org.genivi.appfw

	<**
		@description  : App manager interface.

		This is a generic interface for Application Manager instance(s) for Managed Apps.
	**>
interface AppManager {
	version {
		major 0
		minor 1		
	}

	<**
		@description : This broadcast is every time an application state changes. The receiving clients are supposed to check if it's meant for them.
	**>
	broadcast NewAppState
	{
		out{
				String app_id
				AppState app_state
			}
	}

	<**
		@description : This method can be called by apps to request that the App Manager finds a handler for the content as given by the URI. For example, a Hotel finding application has identified a phone number and the user wants to call it.  Application Manager knows which application is able to provide phone functionality and will delegate the request to it.
		The parameter needs to be a Uniform Resource Identifier (URI) according to http://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml 
		and is expected to encode (using MIME-types or other encoding) the necessary information to perform the action, or to fetch using the URI, the required information.
	**>
	method OpenUri
	{
		in
		{
			String uri_scheme	
		}
	}

	enumeration AppState
	{
		APP_STATE_START=0
		APP_STATE_BACKGROUND=1
		APP_STATE_SHOW=2
		APP_STATE_RESTART=3
		APP_STATE_OFF=4
		APP_STATE_PAUSE=5
	}
}
